{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todosWithUsers","getLastTodoIndex","Math","max","App","useState","setTodos","setTitle","selectedUserId","setSelectedUserId","shouldShowTitleError","setShouldShowTitleError","shouldShowUserError","setShouldShowUserError","handleFormSubmit","event","nativeEvent","preventDefault","trimmedTitle","trim","newTodo","currentTodos","action","method","onSubmit","htmlFor","type","placeholder","value","onChange","inputValue","target","replace","handleTitleChange","Number","handleUserChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edd813ad.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport './UserInfo.scss';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './TodoInfo.scss';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} data-id={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst getLastTodoIndex = (todos: Todo[]) => (\n  Math.max(...todos.map(({ id }) => id))\n);\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [shouldShowTitleError, setShouldShowTitleError] = useState(false);\n  const [shouldShowUserError, setShouldShowUserError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.nativeEvent.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    setShouldShowTitleError(!trimmedTitle);\n    setShouldShowUserError(!selectedUserId);\n\n    if (trimmedTitle && selectedUserId) {\n      const newTodo: Todo = {\n        id: getLastTodoIndex(todos) + 1,\n        userId: selectedUserId,\n        title,\n        completed: false,\n        user: getUser(selectedUserId),\n      };\n\n      setTodos((currentTodos) => [...currentTodos, newTodo]);\n      clearForm();\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setShouldShowTitleError(false);\n\n    const inputValue = event.target.value;\n\n    // removing any special characters from a Title\n    setTitle(inputValue.replace(/[^A-Za-z\\s\\d\\u0400-\\u04FF]/g, ''));\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(Number(event.target.value));\n    setShouldShowUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => handleFormSubmit(event)}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:\n            <input\n              type=\"text\"\n              id=\"titleInput\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => handleTitleChange(event)}\n            />\n          </label>\n          {shouldShowTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:\n            <select\n              data-cy=\"userSelect\"\n              id=\"userSelect\"\n              placeholder=\"Choose a user\"\n              value={selectedUserId}\n              onChange={(event) => handleUserChange(event)}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(({ name, id }) => (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {shouldShowUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}